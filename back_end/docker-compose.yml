services:
  postgres:
    image: postgres:15
    container_name: my-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  app:
    build: .
    container_name: my-app
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DATABASE_URL: ${CONTAINER_DATABASE_URL}
      DIRECT_URL:  ${CONTAINER_DATABASE_URL}
      KEYCLOAK_BASE_URL: ${KEYCLOAK_BASE_URL}
      KEYCLOAK_REALM:     ${KEYCLOAK_REALM}
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASS: ${KEYCLOAK_ADMIN_PASS}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "
        echo '⏳ Waiting for Postgres to be ready...' &&
        until nc -z postgres 5432; do
          sleep 1;
          echo 'still waiting...';
        done &&
        echo ' Postgres is up - running migrations' &&
        npx prisma migrate dev --name init &&
        echo ' Starting app' &&
        npm run dev
      "

  frontend:
    build:
      context: ../front_end/chapter_one
      dockerfile: Dockerfile
    container_name: my-frontend
    ports:
      - "3001:3000"
    depends_on:
      - app
    env_file:
      - ../front_end/chapter_one/.env.local
    environment:
      NEXT_PUBLIC_API_URL: http://app:3000
    volumes:
      - ../front_end/chapter_one:/app
    working_dir: /app
    command: >
      sh -c "
        echo '🚀 Starting frontend' &&
        npm run start
      "

volumes:
  pgdata:
